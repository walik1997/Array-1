#TimeComplexity - O(n)
#Space Complexity = O(1)
class Solution:
    def productExceptSelf(self, nums: list[int]) -> list[int]:
        a=[]
        for i in range(len(nums)):
            if i==0:
                a.insert(0,1)
            else:
                a.insert(i,0)
                a[i]=a[i-1]*nums[i-1]
        i=len(nums)-1
        rsum=1
        while i >=0:
            if i== len(nums)-1:
                a[i]=a[i]*1
                i-=1
            else:
                a[i]=rsum*nums[i+1]*a[i]
                rsum=nums[i+1]*rsum
                i-=1
        return a  
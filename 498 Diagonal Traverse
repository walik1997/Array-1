#TimeComplexity - O(mn)
#Space Complexity = O(1)
class Solution:
    def findDiagonalOrder(self, mat: List[List[int]]) -> List[int]:
        if not mat or not mat[0]:
            return []
        m = len(mat)
        n = len(mat[0])
        result = [0] * (m * n)
        r = c = idx = 0
        flag = True
        while idx < m * n:
            result[idx] = mat[r][c]
            idx += 1
            if flag:
                if c == n - 1:
                    r += 1
                    flag = False
                elif r == 0:
                    c += 1
                    flag = False
                else:
                    r -= 1
                    c += 1
            else:
                if r == m - 1:
                    c += 1
                    flag = True
                elif c == 0:
                    r += 1
                    flag = True
                else:
                    r += 1
                    c -= 1
        
        return result